(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{M:()=>J});var t={formSelector:".popup__form",fieldsetSelector:"popup__fieldset",inputSelector:".popup__input",submitButtonSelector:".popup__button-save",errorElementSelector:".popup__span-error_active",inactiveButtonClass:"popup__button-save_disabled",inputErrorClass:"popup__input_error",errorElementClass:"popup__span-error_active",buttonCloseClass:"popup__button-close",popupClass:"popup"};function n(e,t){var n=e.querySelector(t.formSelector),r=e.querySelector(t.submitButtonSelector);e.querySelector(t.inputSelector)&&!n.checkValidity()&&(r.classList.add(t.inactiveButtonClass),r.disabled=!0)}function r(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.classList.remove(n.inactiveButtonClass),t.disabled=!1):(t.classList.add(n.inactiveButtonClass),t.disabled=!0)}function o(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function c(e){console.log(e)}function a(e){var t=e.submitter;t.textContent="Сохранение...",t.disabled=!0}function i(e){var t=e.submitter;t.textContent="Сохранить",t.disabled=!1}var u={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"f69a8e1a-7b4c-4898-9f33-97539dca3c0c","Content-Type":"application/json"}};function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var p=document.querySelector(".popup__edit-profile"),f=document.querySelector(".popup__add-card"),m=document.querySelector(".popup__view-image"),y=document.querySelector(".profile__title"),v=document.querySelector(".profile__subtitle"),_=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__add-button"),b=document.querySelector('input[name="fullname"]'),S=document.querySelector('input[name="profession"]'),g=document.querySelector('input[name="image-name"]'),q=document.querySelector('input[name="image-link"]'),E=document.querySelector('form[name="edit-form"]'),C=document.querySelector('form[name="add-form"]'),k=document.querySelector(".popup__update-avatar"),L=document.querySelector(".profile__avatar-image"),O=document.querySelector(".profile__update-container"),j=document.querySelector('form[name="update-avatar-form"]'),w=document.querySelector('input[name="avatar-link"]'),x=document.querySelector('form[name="delete-card-form"]'),P=document.querySelector(".popup__delete-card"),A=document.querySelectorAll(".popup");function U(e){e.classList.add("popup_opened"),document.addEventListener("keydown",T)}function D(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",T)}function T(e){"Escape"===e.code&&D(document.querySelector(".popup_opened"))}console.dir(document.querySelector(".popup__input")),O.addEventListener("click",(function(e){U(k),n(k,s({},t))})),_.addEventListener("click",(function(){U(p),b.value=y.textContent,S.value=v.textContent})),h.addEventListener("click",(function(){U(f),n(f,s({},t))})),x.addEventListener("submit",(function(e){var t;e.preventDefault(),(t=B,fetch("".concat(u.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:u.headers,body:JSON.stringify({})}).then(o)).then((function(){N.remove(),D(P)})).catch((function(e){c(e)}))}));var B,N,J,I,M=document.querySelector("#card").content,H=document.querySelector(".elements"),z=M.querySelector(".element"),V=document.querySelector(".popup__image"),$=(z.querySelector(".element__image"),z.querySelector(".element__title"),document.querySelector(".popup__title"));function F(e){var t=z.cloneNode(!0),n=t.querySelector(".element__image"),r=t.querySelector(".element__title"),a=t.querySelector(".element__like-button"),i=t.querySelector(".element__delete-button"),l=t.querySelector(".element__like-count");if(e.owner._id!==J&&i.remove(),0!==e.likes.length)for(var s=0;s<e.likes.length;s++)e.likes[s]._id===J&&a.classList.add("element__like-button_active");return a.addEventListener("click",(function(t){var n;a.classList.contains("element__like-button_active")?function(e){return fetch("".concat(u.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:u.headers,body:JSON.stringify({})}).then(o)}(e._id).then((function(e){console.log(e.likes.length),a.classList.remove("element__like-button_active"),l.textContent=e.likes.length})).catch((function(e){c(e)})):(n=e._id,fetch("".concat(u.baseUrl,"/cards/likes/").concat(n),{method:"PUT",headers:u.headers,body:JSON.stringify({})}).then(o)).then((function(e){console.log(e.likes.length),l.textContent=e.likes.length,a.classList.add("element__like-button_active")})).catch((function(e){c(e)}))})),i.addEventListener("click",(function(e){N=e.target.closest(".element"),B=N.id,U(P)})),n.addEventListener("click",(function(e){V.src=e.target.src,V.alt=e.target.alt,$.textContent=r.textContent,U(m)})),n.src=e.link,n.alt=e.name,r.textContent=e.name,l.textContent=e.likes.length,t.id=e._id,t}function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}I=t,document.querySelectorAll(I.formSelector).forEach((function(e){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);r(n,o,t),n.forEach((function(e){e.addEventListener("input",(function(){!function(e,t){e.validity.valid?function(e,t){var n=e.nextElementSibling;e.classList.remove(t.inputErrorClass),n.classList.remove(t.errorElementClass),n.textContent=""}(e,t):function(e,t,n){var r=e.nextElementSibling;e.classList.add(t.inputErrorClass),r.textContent=n,r.classList.add(t.errorElementClass)}(e,t,e.validationMessage)}(e,t),r(n,o,t)}))}))}(e,I)})),E.addEventListener("submit",(function(e){e.preventDefault(),a(e);var t,n,r=b.value,l=S.value;(t=r,n=l,fetch("".concat(u.baseUrl,"/users/me"),{method:"PATCH",headers:u.headers,body:JSON.stringify({name:t,about:n})}).then(o)).then((function(){y.textContent=r,v.textContent=l,D(p)})).catch((function(e){c(e)})).finally((function(){return i(e)}))})),C.addEventListener("submit",(function(e){e.preventDefault();var t,n={name:g.value,link:q.value,likes:[],owner:{_id:J}};a(e),(t=n,fetch("".concat(u.baseUrl,"/cards"),{method:"POST",headers:u.headers,body:JSON.stringify(t)}).then(o)).then((function(e){n._id=e._id,function(e){H.prepend(F(e))}(n),D(f),C.reset()})).catch((function(e){c(e)})).finally((function(){return i(e)}))})),j.addEventListener("submit",(function(e){e.preventDefault();var t,n=w.value;a(e),(t=n,fetch("".concat(u.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:u.headers,body:JSON.stringify({avatar:t})}).then(o)).then((function(){L.src=n,D(k),j.reset()})).catch((function(e){c(e)})).finally((function(){return i(e)}))})),function(e){A.forEach((function(t){t.addEventListener("mousedown",(function(n){n.target.classList.contains(e.popupClass)&&D(t),n.target.classList.contains(e.buttonCloseClass)&&D(t)}))}))}(t),Promise.all([fetch("".concat(u.baseUrl,"/users/me"),{headers:u.headers}).then(o),fetch("".concat(u.baseUrl,"/cards"),{headers:u.headers}).then(o)]).then((function(e){var t,n=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c=[],a=!0,i=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(c.push(r.value),!t||c.length!==t);a=!0);}catch(e){i=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(i)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,2),r=n[0],o=n[1];!function(e){y.textContent=e.name,v.textContent=e.about,L.src=e.avatar,J=e._id}(r),t=o,Object.keys(t).forEach((function(e){H.append(F(t[e]))}))})).catch((function(e){c(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,