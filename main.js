(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{M:()=>H});var t=".popup__button-save",n="popup__button-save_disabled",o="popup__input_error",r="popup__span-error_active",a="element__like-button_active",c=document.querySelectorAll(".popup__input"),i=document.querySelectorAll(".popup__form"),u=document.querySelectorAll(t);function l(e){var n=e.target.querySelector(t);n.textContent="Сохранение...",n.disabled=!0}function d(e){var n=e.target.querySelector(t);n.textContent="Сохранить",n.disabled=!1}function s(e){e.classList.remove(o),e.nextElementSibling.classList.remove(r)}var p={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"f69a8e1a-7b4c-4898-9f33-97539dca3c0c","Content-Type":"application/json"}};function m(){return fetch("".concat(p.baseUrl,"/cards"),{headers:p.headers})}function f(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function h(e){console.log(e)}function y(e){console.log(e)}var _=document.querySelector(".popup__edit-profile"),v=document.querySelector(".popup__add-card"),S=document.querySelector(".popup__view-image"),g=document.querySelector(".profile__title"),b=document.querySelector(".profile__subtitle"),q=document.querySelector(".profile__edit-button"),k=document.querySelector(".profile__add-button"),E=document.querySelector('input[name="fullname"]'),L=document.querySelector('input[name="profession"]'),C=document.querySelector('input[name="image-name"]'),x=document.querySelector('input[name="image-link"]'),N=document.querySelector('form[name="edit-form"]'),O=document.querySelector('form[name="add-form"]'),U=document.querySelector(".popup__update-avatar"),w=document.querySelector(".profile__avatar-image"),P=document.querySelector('form[name="update-avatar-form"]'),T=document.querySelector('input[name="avatar-link"]');function j(e){M.prepend(I(e))}function J(e){u.forEach((function(e){e.classList.add(n),e.disabled=!0})),function(e){var t=e.querySelector(".popup__button-close");e.addEventListener("mousedown",(function(n){n.target===t&&A(e),n.target===e&&A(e)})),document.addEventListener("keydown",D)}(e),e.classList.add("popup_opened")}function A(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",D),i.forEach((function(e){e.reset()})),c.forEach((function(e){s(e)}))}function D(e){"Escape"===e.code&&A(document.querySelector(".popup_opened"))}w.addEventListener("click",(function(){J(U)})),q.addEventListener("click",(function(){J(_),E.value=g.textContent,L.value=b.textContent})),k.addEventListener("click",(function(){J(v)}));var H,z=document.querySelector("#card").content,M=document.querySelector(".elements"),V=z.querySelector(".element"),B=document.querySelector(".popup__image"),F=(V.querySelector(".element__image"),V.querySelector(".element__title"),document.querySelector(".popup__title"));function G(e){Object.keys(e).forEach((function(t){M.append(I(e[t]))}))}function I(e){var t=V.cloneNode(!0),n=t.querySelector(".element__image"),o=t.querySelector(".element__title"),r=t.querySelector(".element__like-button"),c=t.querySelector(".element__delete-button"),i=t.querySelector(".element__like-count");if(e.owner._id!==H&&c.remove(),0!==e.likes.length)for(var u=0;u<e.likes.length;u++)e.likes[u]._id===H&&r.classList.add(a);return t.addEventListener("click",(function(e){var t;e.target===r&&(r.classList.contains(a)?function(e){return fetch("".concat(p.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:p.headers,body:JSON.stringify({})})}(e.target.parentNode.parentNode.parentNode.id).then(f).then((function(e){console.log(e.likes.length),r.classList.remove(a),i.textContent=e.likes.length})).catch(y):(t=e.target.parentNode.parentNode.parentNode.id,fetch("".concat(p.baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:p.headers,body:JSON.stringify({})})).then(f).then((function(e){console.log(e.likes.length),i.textContent=e.likes.length,r.classList.add(a)})).catch(y)),e.target===n&&(B.src=e.target.src,B.alt=e.target.alt,F.textContent=o.textContent,J(S)),e.target===c&&function(e){return fetch("".concat(p.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:p.headers,body:JSON.stringify({})})}(e.target.parentNode.id).then(f).then(h).then((function(){c.parentNode.remove()})).catch(y)})),n.src=e.link,n.alt=e.name,o.textContent=e.name,i.textContent=e.likes.length,t.id=e._id,t}c.forEach((function(e){e.addEventListener("input",(function(e){e.target.validity.valid||function(e){e.classList.add(o),e.nextElementSibling.classList.add(r)}(e.target),e.target.validity.valid&&s(e.target)}))})),i.forEach((function(e){e.addEventListener("input",(function(e){var o=e.target.form,r=o.checkValidity();r?(o.querySelector(t).classList.remove(n),o.querySelector(t).disabled=!r):(o.querySelector(t).classList.add(n),o.querySelector(t).disabled=!r)}))})),N.addEventListener("submit",(function(e){e.preventDefault();var t=g.textContent=E.value,n=b.textContent=L.value;l(e),function(e,t){return fetch("".concat(p.baseUrl,"/users/me"),{method:"PATCH",headers:p.headers,body:JSON.stringify({name:e,about:t})})}(t,n).then(f).then(h).catch(y).finally((function(){return d(e)})),A(_)})),O.addEventListener("submit",(function(e){e.preventDefault();var t,n={name:C.value,link:x.value,likes:[],_id:undefined,owner:{_id:H}};l(e),(t=n,fetch("".concat(p.baseUrl,"/cards"),{method:"POST",headers:p.headers,body:JSON.stringify(t)})).then(f).then(j).then(m).catch(y),m().then(f).then(G).catch(y).finally((function(){return d(e)})),A(v)})),P.addEventListener("submit",(function(e){e.preventDefault();var t,n=w.src=T.value;l(e),(t=n,fetch("".concat(p.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:p.headers,body:JSON.stringify({avatar:t})})).then(f).then(h).catch(y).finally((function(){return d(e)})),A(U)})),Promise.all([fetch("".concat(p.baseUrl,"/users/me"),{headers:p.headers}).then(f).then((function(e){g.textContent=e.name,b.textContent=e.about,w.src=e.avatar,H=e._id})),m().then(f).then(G)]).catch(y)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,